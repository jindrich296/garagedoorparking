esphome:
# PARKING SENSORS AND DOORS
  name: 1pp-garg-parking
  platform: ESP32
  board: nodemcu-32s

wifi:
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  - ssid: !secret wifi_ssid2
    password: !secret wifi_password2
  manual_ip:
    static_ip: 192.168.50.206
    gateway: 192.168.50.1
    subnet: 255.255.255.0
    dns1: 192.168.50.1

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: 1pp-garg-parking
    password: !secret ap_password

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: !secret ota_pass

# Enable bluetooth proxy
esp32_ble_tracker:
    scan_parameters:
        active: True
bluetooth_proxy:

# Enable Web server.
web_server:
  port: 80

# Sync time with Home Assistant.
time:
  - platform: homeassistant
    id: homeassistant_time

# Text sensors with general information.
text_sensor:
  # Expose ESPHome version as sensor.
  - platform: version
    name: 1pp-garg-parking-espversion
  # Expose WiFi information as sensors.
  - platform: wifi_info
    ip_address:
      name: 1pp-garg-parking-ip
    ssid:
      name: 1pp-garg-parking-ssid
    bssid:
      name: 1pp-garg-parking-bssid

# Exposed switches.
# Switch to restart  
switch:
  - platform: restart
    name: "1pp-garg-parking-restart"

############ RELE GARAZOVE DVERE ##############################
  - platform: gpio
    name: "1pp_garg_parking_door"
    pin: GPIO16
    id: relay1
  - platform: gpio
    name: "1pp_garg_parking_door2"
    pin: GPIO17
    internal: true

############################################

sensor:
  # Uptime sensor.
  - platform: uptime
    name: 1pp_garg_parking-uptime
    update_interval: 60s

  # WiFi Signal sensor.
  - platform: wifi_signal
    name: 1pp-garg-parking-wifisignal
    update_interval: 60s

###############################################################

  - platform: ultrasonic
    trigger_pin: GPIO32
    echo_pin: GPIO33
    name: '1pp_garg_parking_dist1'
    update_interval: 5s
    pulse_time: 20us
    timeout: 2.5m
    unit_of_measurement: 'cm'
    filters:
      - multiply: 100
      - sliding_window_moving_average:
          window_size: 10 #creates a moving average of the last 10 values
          send_every: 1 #sends the moving average at every measurement (but only if it passes the delta filter below)) 
          send_first_at: 1 #after startup immediately start sending the result rather than wait for the first 10 measurements
      - delta : 1.0 #only send the result if the level difference with the last sent result is higher than this

  - platform: ultrasonic
    trigger_pin: GPIO14
    echo_pin: GPIO12
    name: '1pp_garg_parking_dist2'
    update_interval: 5s
    pulse_time: 20us
    timeout: 2.5m
    unit_of_measurement: 'cm'
    filters:
      - multiply: 100
      - sliding_window_moving_average:
          window_size: 10 #creates a moving average of the last 10 values
          send_every: 1 #sends the moving average at every measurement (but only if it passes the delta filter below)) 
          send_first_at: 1 #after startup immediately start sending the result rather than wait for the first 10 measurements
      - delta : 1.0 #only send the result if the level difference with the last sent result is higher than this
######## DHT-11 ######################################
#  - platform: dht
#    pin: GPIO22
#    temperature:
#      name: '1pp_garg_parking_temperature'
#    humidity:
#      name: '1pp_garg_parking_humidity'
#    update_interval: 60s

##############################################

#binary_sensor:
#  - platform: gpio
#    name: "1pp_garg_parking_door"
#    pin: 
#      number: GPIO21
#      mode: INPUT_PULLUP
#    filters:
#      - invert:
#    device_class: garage_door

binary_sensor:
  - platform: gpio
    pin:
      #puvodni GPIO18
      number: GPIO15
      mode: INPUT_PULLUP
      #inverted asi blbne, mel by byt True
      inverted: False
    name: "1pp_garg_parking_doorcontact"
    id: contact_sensor

#binary_sensor:
#  - platform: gpio
#    pin: GPIO18
#    name: "1pp_garg_parking_doorcontact"
#    id: contact_sensor
#    internal: true
#    filters:
#      - invert:
    device_class: lock
#    mode: INPUT_PULLUP
    filters:
      - delayed_on_off: 5s
#    filters:
#      - delayed_on: 50ms
#      - delayed_off: 50ms
      
  - platform: template
    name: "1pp_garg_parking_doorstate"
    device_class: garage_door
    lambda: |-
      if (id(contact_sensor).state) {
        // Garage Door is open.
        return false;
      } else {
        // Garage Door is closed.
        return true;
      }
